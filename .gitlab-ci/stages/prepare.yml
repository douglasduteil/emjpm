#

.prepare_stage: &prepare_stage
  stage: "Prepare"
  dependencies: []

#
#
#
.knex_cache: &knex_cache
  key: "$CI_COMMIT_REF_SLUG-knex-node_modules"
  paths:
    - $CI_PROJECT_DIR/.yarn
    - node_modules
    - packages/knex/node_modules
  policy: pull

Install knex:
  <<: *prepare_stage
  image: node:12-alpine
  rules:
    - changes:
        - .gitlab-ci/stages/prepare.yml
        - packages/knex/package.json
        - yarn.lock
      when: on_success
    - when: manual
  cache:
    <<: *knex_cache
    policy: pull-push
  before_script:
    - find packages -maxdepth 1 -type d -not -name knex | tail -n +2 | xargs rm -rf
  script:
    - yarn config set cache-folder $CI_PROJECT_DIR/.yarn
    - yarn --frozen-lockfile


Install graphql-server:
  <<: *prepare_stage
  image: node:12-alpine
  rules:
    - changes:
        - .gitlab-ci/stages/prepare.yml
        - packages/graphql-server/package.json
        - yarn.lock
      when: on_success
    - when: manual
  cache:
    key: "$CI_COMMIT_REF_SLUG-graphql-server-node_modules"
    paths:
      - $CI_PROJECT_DIR/.yarn
      - node_modules
      - packages/graphql-server/node_modules
  before_script:
    - find packages -maxdepth 1 -type d -not -name graphql-server | tail -n +2 | xargs rm -rf
  script:
    - yarn config set cache-folder $CI_PROJECT_DIR/.yarn
    - yarn --frozen-lockfile


Lint @emjpm/knex:
  stage: "Code Quality"
  dependencies: []
  cache:
    <<: *knex_cache
  rules:
    # - changes:
    #     - .gitlab-ci/stages/prepare.yml
    #     - packages/knex/package.json
    #   when: on_success
    # - when: manual
    - when: on_success
  script:
    - yarn workspace @emjpm/knex lint
